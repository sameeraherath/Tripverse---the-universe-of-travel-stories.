name: Build and Deploy Backend

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanitize repository name for Docker
        id: sanitize
        run: |
          # Convert to lowercase, replace triple dashes with single, remove trailing period, replace invalid chars
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' | sed 's/---/-/g' | sed 's/\.$//' | sed 's/[^a-z0-9\/-]/-/g' | sed 's/-\{2,\}/-/g')
          echo "sanitized=$REPO_NAME" >> $GITHUB_OUTPUT
          echo "Sanitized repo name: $REPO_NAME"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.sanitize.outputs.sanitized }}/tripverse-backend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Notify Render
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -n "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}" || true
          fi

